[
  {
    "objectID": "python/shiny/index.html",
    "href": "python/shiny/index.html",
    "title": "Shinylive applications embedded in Quarto documents",
    "section": "",
    "text": "Embedded Shiny application\nTo display a running Shiny app, use a code block with {shinylive-python}.\n#| standalone: true\n#| viewerHeight: 420\n\nfrom shiny import App, render, ui\nimport numpy as np\nimport matplotlib.pyplot as plt\n\napp_ui = ui.page_fluid(\n    ui.layout_sidebar(\n        ui.panel_sidebar(\n            ui.input_slider(\"period\", \"Period\", 0.5, 4, 1, step=0.5),\n            ui.input_slider(\"amplitude\", \"Amplitude\", 0, 2, 1, step=0.25),\n            ui.input_slider(\"shift\", \"Phase shift\", 0, 2, 0, step=0.1),\n        ),\n        ui.panel_main(\n            ui.output_plot(\"plot\"),\n        ),\n    ),\n)\n\n\ndef server(input, output, session):\n    @output\n    @render.plot(alt=\"Sine wave\")\n    def plot():\n        t = np.arange(0.0, 4.0, 0.01)\n        s = input.amplitude() * np.sin(\n            2 * np.pi / input.period() * (t - input.shift() / 2)\n        )\n        fig, ax = plt.subplots()\n        ax.set_ylim([-2, 2])\n        ax.plot(t, s)\n        ax.grid()\n\n\napp = App(app_ui, server)\nNote that the code block currently must have #| standalone: true, which indicates that the code represents a complete Shiny application, as opposed to one which has parts spread throughout the document (which will be supported in the future).\nThe example above also uses #| viewerHeight: 420 to set the height of the viewer to 420 pixels.\n\n\nEditor with app\nIf you want to display an editor panel with along with the running application, use #| components: [editor, viewer]. Users will be able to use the editor to modify the code and re-run the application.\n\n#| standalone: true\n#| components: [editor, viewer]\n\nfrom shiny import App, render, ui\n\napp_ui = ui.page_fluid(\n    ui.input_slider(\"n\", \"N\", 0, 100, 40),\n    ui.output_text_verbatim(\"txt\"),\n)\n\ndef server(input, output, session):\n    @output\n    @render.text\n    def txt():\n        return f\"The value of n*2 is {input.n() * 2}\"\n\napp = App(app_ui, server)\n\nThe default width in a Quarto document is somewhat narrow for showing the editor and viewer next to each other. It can be made wider with Quarto layout containers. In the example above it uses column-page-inset-right.\n\nVertically stacked components\nTo display the editor above the code, use #| layout: vertical.\n#| standalone: true\n#| components: [editor, viewer]\n#| layout: vertical\n#| viewerHeight: 300\n\nfrom shiny import App, render, ui\n\napp_ui = ui.page_fluid(\n    ui.input_slider(\"n\", \"N\", 0, 100, 40),\n    ui.output_text_verbatim(\"txt\"),\n)\n\ndef server(input, output, session):\n    @output\n    @render.text\n    def txt():\n        return f\"The value of n*2 is {input.n() * 2}\"\n\napp = App(app_ui, server)"
  },
  {
    "objectID": "python/index.html",
    "href": "python/index.html",
    "title": "Python",
    "section": "",
    "text": "Main page for Python."
  },
  {
    "objectID": "python/intro/index.html",
    "href": "python/intro/index.html",
    "title": "Introduction to Python",
    "section": "",
    "text": "Here we learn an introduction to Python."
  },
  {
    "objectID": "python/intro/index.html#downloads",
    "href": "python/intro/index.html#downloads",
    "title": "Introduction to Python",
    "section": "Downloads",
    "text": "Downloads\n Download"
  },
  {
    "objectID": "python/intro/index.html#math",
    "href": "python/intro/index.html#math",
    "title": "Introduction to Python",
    "section": "Math",
    "text": "Math\nHere is some math, which is inline: \\(f(x) = x^2\\).\nAnd here is some math in display style \\[\n\\sum_{i=1}^n i = \\frac{n(n+1)}{2}.\n\\]"
  },
  {
    "objectID": "python/installing/index.html",
    "href": "python/installing/index.html",
    "title": "Installing Python",
    "section": "",
    "text": "Here we learn how to install Python."
  },
  {
    "objectID": "python/r/index.html",
    "href": "python/r/index.html",
    "title": "WebR in Quarto HTML Documents",
    "section": "",
    "text": "This is a webr-enabled code cell in a Quarto HTML document.\nLoading\n  webR..."
  },
  {
    "objectID": "python/r/index.html#webr",
    "href": "python/r/index.html#webr",
    "title": "WebR in Quarto HTML Documents",
    "section": "",
    "text": "This is a webr-enabled code cell in a Quarto HTML document.\nLoading\n  webR..."
  },
  {
    "objectID": "python/r/index.html#comments",
    "href": "python/r/index.html#comments",
    "title": "WebR in Quarto HTML Documents",
    "section": "Comments",
    "text": "Comments\ninclude-in-header: [webr-serviceworker.js, webr-worker.js]"
  },
  {
    "objectID": "resume.html",
    "href": "resume.html",
    "title": "Resume",
    "section": "",
    "text": "Resume here."
  },
  {
    "objectID": "projects/level-sets/index.html",
    "href": "projects/level-sets/index.html",
    "title": "Homology of Level Sets",
    "section": "",
    "text": "The following images are generated by a haskell library I am writing for applied topology. The first step is to generate the level sets using the marching cubes algorithm, which I've implemented in haskell. Then next part is to compute the persistent homology via left or sub level set filtration; this also includes ideas from large scale geometry.\n\nBarnes et al.\nJulie Barnes, William Kreahling, and Beth Schaubroeck published a Coloring Book of Complex Function Representations. This coloring book has several pretty images generated via level sets of complex valued functions. Since the book is available for purchase, I thought the images in the book needed barcodes; hence my interest in the project.\n\n\n\nPlate 3 from the book by Barnes et al. Let \\(f(z) = z^2 - 0.003/z^2\\) and \\(g(z) = \\Re(f^5(z))\\). The image is \\(g^{-1}(0) \\cap [-1,1]\\times [-1,1]\\).\n\n\nAnd here is a pdf of the image with its barcode generated by left level set filtration.\n\n\nBatman Logo\nThis image looks strikingly similar to the Batman Logo.\n\n\n\nLet \\(f(z) = z^2 - 1.75488\\) and \\(g(z) = \\Re(f^6(z))\\). The image is \\(g^{-1}(\\{\\pm 0,1,2,4,8,16\\}) \\cap [-2,2]\\times [-1/2,1/2]\\).\n\n\nAnd here is a pdf of the image with its barcode generated by left level set filtration."
  },
  {
    "objectID": "projects/index.html",
    "href": "projects/index.html",
    "title": "Research Projects",
    "section": "",
    "text": "Here are some research project I have worked on, or I am working on."
  },
  {
    "objectID": "ashlyn-math/paths-through-squares.html",
    "href": "ashlyn-math/paths-through-squares.html",
    "title": "Paths Through Squares",
    "section": "",
    "text": "Problem\nHow many paths are there starting in the upper left square and ending in the bottom right square, if you are only allowed to move right or down?\n\n\nRender PDF requires pylatex installation.\n\n\n\n\n\nPaths"
  },
  {
    "objectID": "ashlyn-math/poison-pills.html",
    "href": "ashlyn-math/poison-pills.html",
    "title": "Poison Pills",
    "section": "",
    "text": "Problem\nThere are nine pills which are identical except one pill has a different weight than the other eight. The eight identical pills are all poison and will kill you. Then nineth pill weighs different than the eight and will not hurt you. You have a balance scale which you may use no more than three times. You must take a pill. Figure out which pill is safe to take."
  },
  {
    "objectID": "ashlyn-math/counting-triangles.html",
    "href": "ashlyn-math/counting-triangles.html",
    "title": "Counting Triangles",
    "section": "",
    "text": "Problem\nDetermine how many total triangles there are in the figure below. Then determine how many there would be if the figure had \\(n\\) rows instead of six.\n\n\nRender PDF requires pylatex installation.\n\n\n\n\n\nCounting Triangles"
  },
  {
    "objectID": "ashlyn-math/points-on-a-circle.html",
    "href": "ashlyn-math/points-on-a-circle.html",
    "title": "Points on a Circle",
    "section": "",
    "text": "Problem\nBelow is a circle with equally spaced points. Connect each point to every other point. Then find the following: 1. the number of circles, 2. the number of points, 3. the number of segments, 4. the number of triangles, 5. the number of quadrilaterals, 6. the number of pentagons, 7. the number of hexagons, 8. the number of heptagons, 9. the number of octogons.\n\n\nRender PDF requires pylatex installation.\n\n\n\n\n\nPoints on a Circle"
  },
  {
    "objectID": "ashlyn-math/counting-sierpinski.html",
    "href": "ashlyn-math/counting-sierpinski.html",
    "title": "Counting Sierpinski",
    "section": "",
    "text": "Problem\nDetermine how many total triangles there are in the figure below.\n\n\nRender PDF requires pylatex installation.\n\n\n\n\n\nCounting Sierpinski"
  },
  {
    "objectID": "ashlyn-math/pascals-triangle-coloring-primes.html",
    "href": "ashlyn-math/pascals-triangle-coloring-primes.html",
    "title": "Pascal’s Triangle Coloring Primes",
    "section": "",
    "text": "Problem\nIf you haven’t already done so, do Pascal’s Triangle and Pascal’s Triangle Coloring problems first.\nThe first few primes are 2,3,5,7,11,13. Choose a prime, and then color hexagons containing a multiple of that prime number.\n\n\n\nPascal’s Triangle"
  },
  {
    "objectID": "ashlyn-math/hexagon-coloring.html",
    "href": "ashlyn-math/hexagon-coloring.html",
    "title": "Hexagon Coloring",
    "section": "",
    "text": "Problem\nIf you haven’t already done so, do Pascal’s Triangle and Pascal’s Trinagle Coloring problems first.\nThis hexagon is made by taking six copies of Pascal’s Triangle, and then connecting them along the diagonals containing ones. As you did in Pascal’s Trinagle Coloring, color all the small hexagons containing an odd number one color, and all the small hexagons containing an even number another color.\n\n\nRender PDF requires pylatex installation.\n\n\n\n\n\nHexagon Coloring"
  },
  {
    "objectID": "ashlyn-math/sieve-of-eratosthenes.html",
    "href": "ashlyn-math/sieve-of-eratosthenes.html",
    "title": "Sieve of Eratosthenes",
    "section": "",
    "text": "Problem\nA natural number greater than one is prime if it cannot be written as the product of two smaller natural numbers. In this problem, you will find the first few prime numbers using the Sieve of Eratosthenes. Find out how many prime numbers are less than 120.\nWrite out then numbers 1-120 in order in the grid below. Cross out two. Circle two, this is the first prime. Now cross out (or color out) all multiples of two except two itself. The next number not crossed out is three. Circle it since it is the next prime. Now cross out all multiples of three except three itself. Repeat this process: find the then next number which is not crossed out; this is the next prime; circle it and then cross out all multiples of it except itself. Keep going until you can’t cross out any more. Count the primes (circled numbers).\n\n\nRender PDF requires pylatex installation.\n\n\n\n\n\nSieve of Eratosthenes"
  },
  {
    "objectID": "ashlyn-math/counting-squares.html",
    "href": "ashlyn-math/counting-squares.html",
    "title": "Counting Squares",
    "section": "",
    "text": "Problem\nDetermine how many total squares there are in the figure below.\n\n\nRender PDF requires pylatex installation.\n\n\n\n\n\nCounting Sierpinski"
  },
  {
    "objectID": "ashlyn-math/index.html",
    "href": "ashlyn-math/index.html",
    "title": "Ashlyn Math Book",
    "section": "",
    "text": "This is a collection of mathematics activities for my daughter Ashlyn."
  },
  {
    "objectID": "ashlyn-math/hexagon-coloring-primes.html",
    "href": "ashlyn-math/hexagon-coloring-primes.html",
    "title": "Hexagon Coloring Primes",
    "section": "",
    "text": "Problem\nIf you haven’t already done so, do Hexagon Coloring and Pascal’s Triangle Colring first.\nLike you did in Pascal’s Triangle Colring, choose a small prime and color all of its multiples.\n\n\n\nHexagon Coloring"
  },
  {
    "objectID": "ashlyn-math/pascals-triangle.html",
    "href": "ashlyn-math/pascals-triangle.html",
    "title": "Pascal’s Triangle",
    "section": "",
    "text": "Problem\nPut a number 1 in the top most hexagon. We say that this hexagon is located at row zero and column zero. Next put the number 1 in each of the two hexagons in row 1. Now put a 1 in row two column zero, a 2 in row two column one, and another 1 in row two column two. Put the numbers 1,3,3,1 in row three. Fill in the rest of the hexagons.\n\n\nRender PDF requires pylatex installation.\n\n\n\n\n\nPascal’s Triangle"
  },
  {
    "objectID": "ashlyn-math/pascals-triangle-coloring.html",
    "href": "ashlyn-math/pascals-triangle-coloring.html",
    "title": "Pascal’s Triangle Coloring",
    "section": "",
    "text": "Problem\nIf you haven’t already done so, do Pascal’s Triangle problem first.\nColor hexagons containing an odd number one color, and each hexagon containing an even number another color (or leave it white).\n\n\n\nPascal’s Triangle"
  },
  {
    "objectID": "ashlyn-math/wodb3.html",
    "href": "ashlyn-math/wodb3.html",
    "title": "Which One Doesn’t Belong 3",
    "section": "",
    "text": "Problem\nFind which one doesn’t belong.\n\n\n\nWhich One Doesn’t Belong 3"
  },
  {
    "objectID": "ashlyn-math/wodb1.html",
    "href": "ashlyn-math/wodb1.html",
    "title": "Which One Doesn’t Belong",
    "section": "",
    "text": "Problem\nFind which one doesn’t belong.\n\n\n\nWhich One Doesn’t Belong"
  },
  {
    "objectID": "ashlyn-math/wodb2.html",
    "href": "ashlyn-math/wodb2.html",
    "title": "Which One Doesn’t Belong 2",
    "section": "",
    "text": "Problem\nFind which one doesn’t belong.\n\n\n\nWhich One Doesn’t Belong 2"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Home",
    "section": "",
    "text": "Welcome\nThings to do on this website:\n\nA landing page.\nResume\nGet Shiny apps to work with r.\nThebelab integration.\nMove over things from old website."
  },
  {
    "objectID": "julia/index.html",
    "href": "julia/index.html",
    "title": "Julia",
    "section": "",
    "text": "Main page for Julia."
  },
  {
    "objectID": "julia/intro/index.html",
    "href": "julia/intro/index.html",
    "title": "Introduction to Julia",
    "section": "",
    "text": "Here we learn an introduction to Julia."
  },
  {
    "objectID": "julia/installing/index.html",
    "href": "julia/installing/index.html",
    "title": "Installing Julia",
    "section": "",
    "text": "Here we learn how to install Julia."
  }
]