---
title: "Pascal's Triangle"
autor: "Ryan Jensen"
jupyter: python3
number-depth: 1
order: 10
format:
  html: 
    code-fold: true
    default-image-extension: svg
  pdf:
    default-image-extension: pdf
---

#### Problem

Put a number 1 in the top most hexagon. We say that this hexagon is located at row zero and column zero. Next put the number 1 in each of the two hexagons in row 1. Now put a 1 in row two column zero, a 2 in row two column one, and another 1 in row two column two. Put the numbers 1,3,3,1 in row three. Fill in the rest of the hexagons.

```{python}
#| echo: false

from chalk import *

def mkCell(sl=1):
    return regular_polygon(6,sl).rotate_by(1/12)

def mkRow(row=0, sl =1):
    return hcat([mkCell(sl) for i in range(row+1)])

def mkTriangle(row=0, sl=1):
    pyr=concat(
      [mkRow(i,sl).center_xy().translate(0,3*i*sl/2) for i in range(row+1)])
    return pyr

def mkHex(rows=0,sl=1):
    return concat([mkTriangle(rows,sl).rotate_by(i/6) for i in range(6)])

myPyr=mkTriangle(row=15)
myPyr.render_svg("image/pascals-triangle-16.svg",800)
myPyr.render_pdf("image/pascals-triangle-16.pdf",800)

```

![Pascal's Triangle](image/pascals-triangle-16){width="90%"}
